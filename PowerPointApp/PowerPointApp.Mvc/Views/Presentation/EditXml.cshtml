@model string
@{
    ViewBag.Title = "XML ile Sunum Oluştur";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-4">
    <h2>XML ile Sunum Oluştur</h2>

    <div class="row">
        <div class="col-md-4">
            <form id="xmlForm" method="post">
                <textarea id="xmlInput" name="xmlInput" rows="25" class="form-control">@Model</textarea>

                <div class="d-grid gap-2 mt-2">
                    <button type="button" class="btn btn-warning" onclick="applyTemplate()">Şablon Ekle</button>
                    <button type="button" class="btn btn-danger" onclick="clearSlide()">Son Slaytı Sil</button>
                    <button type="submit" class="btn btn-primary">Sunumu Oluştur ve İndir</button>
                    <button type="button" class="btn btn-info" onclick="previewOnly()">Görüntüle (PDF)</button>
                </div>
            </form>
        </div>

        <div class="col-md-8">
            <div class="d-flex justify-content-end mb-2">
                <button id="btnTogglePdf" class="btn btn-outline-secondary" onclick="togglePdf()">PDF Görüntüle</button>
            </div>
            <div id="xmlPdfContainer" class="d-none shadow-sm border rounded" style="height:85vh;">
                <iframe id="xmlPdfFrame" style="width:100%; height:100%; border:none;"></iframe>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
    function togglePdf() {
        const c = document.getElementById('xmlPdfContainer');
        const f = document.getElementById('xmlPdfFrame');
        const btn = document.getElementById('btnTogglePdf');
        if (c.classList.contains('d-none')) {
            f.src = '@Url.Action("ViewPdfFromXml", "Presentation")';
            c.classList.remove('d-none');
            btn.innerText = 'PDF Kapat';
        } else {
            f.src = '';
            c.classList.add('d-none');
            btn.innerText = 'PDF Görüntüle';
        }
    }

    function applyTemplate() {
        const tpl = `
<slide>
  <title x="50" y="20" w="600" h="50">Yeni Başlık</title>
  <body x="50" y="100" w="600" h="100">Yeni metin...</body>
</slide>`;
        document.getElementById('xmlInput').value += tpl;
        document.getElementById('xmlForm').dispatchEvent(new Event('submit'));
    }

    function clearSlide() {
        const xml = document.getElementById('xmlInput');
        const slides = xml.value.match(/<slide>[\s\S]*?<\/slide>/g);
        if (slides?.length > 0) {
            slides.pop();
            xml.value = slides.join('');
            document.getElementById('xmlForm').dispatchEvent(new Event('submit'));
        } else {
            alert('Silinecek slayt yok.');
        }
    }

    // Sunumu Güncelle (indir)
    document.getElementById('xmlForm').addEventListener('submit', function (e) {
        e.preventDefault();
        const xml = document.getElementById('xmlInput').value;

        fetch('@Url.Action("UpdateFromXml", "Presentation")', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams({ xmlInput: xml })
        })
        .then(response => {
            if (!response.ok) throw new Error('Sunum oluşturulamadı');
            return response.blob();
        })
        .then(blob => {
            const frame = document.getElementById('xmlPdfFrame');
            const container = document.getElementById('xmlPdfContainer');
            const blobUrl = URL.createObjectURL(blob);
            frame.src = blobUrl;
            container.classList.remove('d-none');
            document.getElementById('btnTogglePdf').innerText = 'PDF Kapat';
        })
        .catch(err => alert(err.message));
    });

    // Görüntüle butonu
    function previewOnly() {
        const xml = document.getElementById('xmlInput').value;

        fetch('@Url.Action("PreviewOnlyFromXml", "Presentation")', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams({ xmlInput: xml })
        })
        .then(response => {
            if (!response.ok) throw new Error('PDF önizleme başarısız');
            return response.blob();
        })
        .then(blob => {
            const frame = document.getElementById('xmlPdfFrame');
            const container = document.getElementById('xmlPdfContainer');
            const blobUrl = URL.createObjectURL(blob);
            frame.src = blobUrl;
            container.classList.remove('d-none');
            document.getElementById('btnTogglePdf').innerText = 'PDF Kapat';
        })
        .catch(err => alert(err.message));
    }
    </script>
}
