@model string
@{
    ViewBag.Title = "XML ile Sunum Oluştur";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-4">
    <h2 class="mb-3">XML ile Sunum Oluştur</h2>

    <div class="row">
        <!-- Sol: XML giriş ve butonlar -->
        <div class="col-md-4">
            <form id="xmlForm" method="post">
                <textarea id="xmlInput" name="xmlInput" rows="22" class="form-control mb-3">@Model</textarea>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">Sunumu Oluştur (İndir)</button>
                    <button type="button" class="btn btn-info" onclick="previewOnly()">Görüntüle (PDF)</button>
                </div>
            </form>
        </div>

        <!-- Sağ: PDF iframe gösterimi -->
        <div class="col-md-8">
            <div id="xmlPdfContainer" class="d-none border rounded shadow" style="height:85vh;">
                <iframe id="xmlPdfFrame" style="width:100%; height:100%; border:none;"></iframe>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
    // PDF görüntüleme fonksiyonu
    function previewOnly() {
        const xml = document.getElementById('xmlInput').value;

        fetch('@Url.Action("PreviewOnlyFromXml", "Presentation")', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams({ xmlInput: xml })
        })
        .then(response => {
            if (!response.ok) throw new Error('PDF oluşturulamadı');
            return response.blob();
        })
        .then(blob => {
            const blobUrl = URL.createObjectURL(blob);
            const iframe = document.getElementById('xmlPdfFrame');
            iframe.src = blobUrl;
            document.getElementById('xmlPdfContainer').classList.remove('d-none');
        })
        .catch(err => alert(err.message));
    }
    </script>
}
